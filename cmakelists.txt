cmake_minimum_required(VERSION 3.22)
project(Moonlight LANGUAGES C CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Make builds reproducible
set(CMAKE_POLICY_DEFAULT_CMP0069 NEW)

# -------------------------------
# Lua library
# -------------------------------
set(LUA_SOURCES
    src/library/Lua54/lapi.c
    src/library/Lua54/lauxlib.c
    src/library/Lua54/lbaselib.c
    src/library/Lua54/lcode.c
    src/library/Lua54/lcorolib.c
    src/library/Lua54/lctype.c
    src/library/Lua54/ldblib.c
    src/library/Lua54/ldebug.c
    src/library/Lua54/ldo.c
    src/library/Lua54/ldump.c
    src/library/Lua54/lfunc.c
    src/library/Lua54/lgc.c
    src/library/Lua54/linit.c
    src/library/Lua54/liolib.c
    src/library/Lua54/llex.c
    src/library/Lua54/lmathlib.c
    src/library/Lua54/lmem.c
    src/library/Lua54/loadlib.c
    src/library/Lua54/lobject.c
    src/library/Lua54/lopcodes.c
    src/library/Lua54/loslib.c
    src/library/Lua54/lparser.c
    src/library/Lua54/lstate.c
    src/library/Lua54/lstring.c
    src/library/Lua54/lstrlib.c
    src/library/Lua54/ltable.c
    src/library/Lua54/ltablib.c
    src/library/Lua54/ltm.c
    src/library/Lua54/lundump.c
    src/library/Lua54/lutf8lib.c
    src/library/Lua54/lvm.c
    src/library/Lua54/lzio.c
)

add_library(lua STATIC ${LUA_SOURCES})
target_include_directories(lua PUBLIC src/library/Lua54)

# Add compiler-specific flags for Lua
target_compile_definitions(lua PRIVATE 
    LUA_BUILD_AS_DLL=0
)

if(MSVC)
    target_compile_options(lua PRIVATE /wd4244 /wd4101 /wd4267 /wd4310)
else()
    target_compile_options(lua PRIVATE -Wno-unused-parameter -Wno-unused-function)
endif()

# SDL3

# This should be the directory that contains the SDL3 folder (I hope)
set(SDL3_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/include")
set(SDL3_HEADERS_DIR "${SDL3_INCLUDE_DIR}/SDL3")
set(SDL3_LIB_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/library/SDL3/x64")

add_library(SDL3::SDL3 SHARED IMPORTED)

set_target_properties(SDL3::SDL3 PROPERTIES
    IMPORTED_LOCATION "${SDL3_LIB_DIR}/SDL3.dll"
    IMPORTED_IMPLIB "${SDL3_LIB_DIR}/SDL3.lib"
    INTERFACE_INCLUDE_DIRECTORIES "${SDL3_INCLUDE_DIR};${SDL3_HEADERS_DIR}"
)

# SDL_ttf (this basicly the same lol)

# This should be the directory that contains the SDL3 folder (I hope)
set(SDLTTF_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/include")
set(SDLTTF_HEADERS_DIR "${SDLTTF_INCLUDE_DIR}/SDL_ttf")
set(SDLTTF_LIB_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/library/SDL_ttf/x64")

add_library(SDLTTF::SDLTTF SHARED IMPORTED)

set_target_properties(SDLTTF::SDLTTF PROPERTIES
    IMPORTED_LOCATION "${SDLTTF_LIB_DIR}/SDL3_ttf.dll"
    IMPORTED_IMPLIB "${SDLTTF_LIB_DIR}/SDL3_ttf.lib"
    INTERFACE_INCLUDE_DIRECTORIES "${SDLTTF_INCLUDE_DIR};$SDLTTF_HEADERS_DIR}"
)


# Engine sources

file(GLOB_RECURSE ENGINE_SOURCES
    "src/*.cpp"
    "src/*.c"
)
# But note: This doesn't automatically update when files are added/removed

# Exclude Lua sources (already built as static lib)
list(FILTER ENGINE_SOURCES EXCLUDE REGEX ".*/src/library/Lua54/.*")

add_executable(Moonlight ${ENGINE_SOURCES})

# Link dependencies and include directories

target_link_libraries(Moonlight PRIVATE lua SDL3::SDL3)

# Compiler / linker options

if(MSVC)
    target_compile_options(Moonlight PRIVATE /W4 /WX /utf-8)
    target_link_options(Moonlight PRIVATE /DEBUG)
else()
    target_compile_options(Moonlight PRIVATE -Wall -Wextra -Wpedantic -Werror)
    target_link_options(Moonlight PRIVATE -Xlinker /subsystem:console)
endif()

# Add platform-specific definitions
if(WIN32)
    target_compile_definitions(Moonlight PRIVATE _CRT_SECURE_NO_WARNINGS)
endif()

# Copy SDL3.dll to build output

add_custom_command(TARGET Moonlight POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${SDL3_LIB_DIR}/SDL3.dll"
        $<TARGET_FILE_DIR:Moonlight>
    COMMENT "Copying SDL3.dll to output directory"
)

# Copy SDL3_ttf.dll to build output
add_custom_command(TARGET Moonlight POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${SDLTTF_LIB_DIR}/SDL3_ttf.dll"
        $<TARGET_FILE_DIR:Moonlight>
    COMMENT "Copying SDL3_ttf.dll to output directory"
)

# Install target (optional)
install(TARGETS Moonlight
    RUNTIME DESTINATION bin
)

install(FILES "${SDL3_LIB_DIR}/SDL3.dll" "${SDLTTF_LIB_DIR}/SDL3_ttf.dll"
    DESTINATION bin
)